# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build project with Maven

on:
  push:
    branches: [ nikita, artem, develop, "feature/*", "feature-*" ]
  pull_request:
    branches: [ nikita, artem, develop, "feature/*", "feature-*" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Load Code
      uses: actions/checkout@v2
    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Build with Maven
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -T 2C -B clean install -Psonar --file pom.xml
    - name: Run Junit report generator
      uses: check-run-reporter/action@v2.0.0
      if: ${{ always() }}
      with:
          # This label is more complex than you probably want. Since we're
          # running this workflow for both push and pull_request events to test
          # the action itself, we're effectively running the workflwo twice for
          # each PR Commit and we need to differentiate in the UI.
          label: 'Unit Tests (${{ github.event_name }})'
          report: '**/surefire-reports/*.xml'
          token: ${{ secrets.CHECK_RUN_REPORTER_TOKEN }}
    # - name: Upload artifacts
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: BUILD
    #     path: ./**/target/*.jar
