<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.4.4</version>
    <relativePath/>
    <!-- lookup parent from repository -->
  </parent>
  <groupId>nc.unc.cs</groupId>
  <artifactId>Project2020</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>Project</name>
  <description>Project project for Spring Boot</description>
  <packaging>pom</packaging>

  <properties>
    <java.version>1.8</java.version>
    <spring-cloud.version>2020.0.2</spring-cloud.version>
    <zipkin.version>2.12.9</zipkin.version>
    <sonar.version>3.8.0.2131</sonar.version>
    <jacoco.version>0.8.6</jacoco.version>
    <modelmapper.version>2.3.9</modelmapper.version>
    <minidev.version>1.0.2</minidev.version>
    <springdoc.version>1.5.6</springdoc.version>
    <xstream.version>1.4.16</xstream.version>
    <delombok.version>1.18.18.0</delombok.version>
    <checkstyle.version>8.41</checkstyle.version>
    <checkstyle.build.version>3.1.2</checkstyle.build.version>
    <asciidoc.build.version>2.1.0</asciidoc.build.version>
    <javadoc.build.version>3.2.0</javadoc.build.version>
    <!--suppress UnresolvedMavenProperty -->
    <mpr.root>${maven.multiModuleProjectDirectory}</mpr.root>
<!--    <spring.run.port>8080</spring.run.port>-->
    <spring.cl.discovery>false</spring.cl.discovery>
    <spring.cl.config>false</spring.cl.config>
    <spring.cl.discovery.prop>-Dspring.cloud.discovery.enabled=${spring.cl.discovery}</spring.cl.discovery.prop>
    <spring.cl.config.prop>-Dspring.cloud.config.enabled=${spring.cl.config}</spring.cl.config.prop>
    <spring.runner.args>${spring.cl.discovery.prop} ${spring.cl.config.prop} -Xms20m -Xmx128m</spring.runner.args>
  </properties>

  <!--
  Зависимость\библиотека версий дргугих зависимостей,
  содержит информацию об актуальных совместимых версиях модулей Spring Cloud
    -->
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>30.1.1-jre</version>
      </dependency>
      <dependency>
        <groupId>net.minidev</groupId>
        <artifactId>asm</artifactId>
        <version>${minidev.version}</version>
      </dependency>
      <dependency>
        <groupId>org.modelmapper</groupId>
        <artifactId>modelmapper</artifactId>
        <version>${modelmapper.version}</version>
      </dependency>
      <dependency>
        <groupId>com.thoughtworks.xstream</groupId>
        <artifactId>xstream</artifactId>
        <version>${xstream.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springdoc</groupId>
        <artifactId>springdoc-openapi-ui</artifactId>
        <version>${springdoc.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springdoc</groupId>
        <artifactId>springdoc-openapi-webmvc-core</artifactId>
        <version>${springdoc.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springdoc</groupId>
        <artifactId>springdoc-openapi-data-rest</artifactId>
        <version>${springdoc.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springdoc</groupId>
        <artifactId>springdoc-openapi-security</artifactId>
        <version>${springdoc.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-config-dependencies</artifactId>
        <version>3.0.3</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <!-- список модулей\под-проектов	-->
  <modules>
    <module>services</module>
    <module>discovery</module>
    <module>config</module>
    <module>client-ui</module>
  </modules>

  <!-- общие зависимости для всех модулей	-->
  <dependencies>

    <dependency>
      <groupId>com.squareup.okhttp3</groupId>
      <artifactId>okhttp</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter</artifactId>
    </dependency>

    <!--
    Возможность использовать bootstrap.yml файлы - которые загружают конфигурацию до
    активации Spring сервиса
      -->
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-bootstrap</artifactId>
    </dependency>

    <!-- дополнительные сервисы для ускорения разработки	-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <scope>runtime</scope>
      <optional>true</optional>
    </dependency>

    <!-- дополнительные сервисы для показа состояния сервиса	-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>

    <!-- Подсказки для IDE во время редактирования application.yml \ bootstrap.yml	-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-ui</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-webmvc-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-data-rest</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-security</artifactId>
    </dependency>

    <!-- Автогенерация кода через простановку аннотаций	-->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
    </dependency>

    <!-- Модуль для написания тестов с использованием Spring	-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- Зависимость для написания тестов (д/з)-->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- Зависимость для модуля для написания тестов	-->
    <dependency>
      <groupId>net.minidev</groupId>
      <artifactId>asm</artifactId>
      <scope>test</scope>
    </dependency>

<!--    &lt;!&ndash; Зависимость для модуля для написания тестов	&ndash;&gt;-->
<!--    <dependency>-->
<!--      <groupId>net.minidev</groupId>-->
<!--      <artifactId>json-smart</artifactId>-->
<!--      <scope>test</scope>-->
<!--    </dependency>-->

    <!-- в ветке develop не использовалось -->
<!--    <dependency>-->
<!--      <groupId>net.minidev</groupId>-->
<!--      <artifactId>accessors-smart</artifactId>-->
<!--      <version>1.2</version>-->
<!--    </dependency>-->

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-test</artifactId>
      <scope>test</scope>
    </dependency>


    <!-- https://mvnrepository.com/artifact/org.springframework.restdocs/spring-restdocs-mockmvc -->
    <dependency>
      <groupId>org.springframework.restdocs</groupId>
      <artifactId>spring-restdocs-mockmvc</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.modelmapper</groupId>
      <artifactId>modelmapper</artifactId>
    </dependency>

  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>${checkstyle.build.version}</version>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${javadoc.build.version}</version>
        </plugin>
        <plugin>
          <groupId>org.projectlombok</groupId>
          <artifactId>lombok-maven-plugin</artifactId>
          <version>${delombok.version}</version>
        </plugin>
        <plugin>
          <groupId>org.asciidoctor</groupId>
          <artifactId>asciidoctor-maven-plugin</artifactId>
          <version>${asciidoc.build.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok-maven-plugin</artifactId>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>delombok</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <inherited>true</inherited>
        <executions>
          <execution>
            <phase>compile</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <configLocation>checkstyle.xml</configLocation>
          <encoding>UTF-8</encoding>
          <consoleOutput>true</consoleOutput>
          <enableFilesSummary>true</enableFilesSummary>
          <cacheFile>target/checkstyle.cache</cacheFile>
          <failOnViolation>true</failOnViolation>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>com.puppycrawl.tools</groupId>
            <artifactId>checkstyle</artifactId>
            <version>${checkstyle.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <executions>
          <execution>
            <inherited>true</inherited>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <!-- attached to Maven test phase -->
          <execution>
            <id>report</id>
            <phase>test</phase>
            <inherited>true</inherited>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
          <execution>
            <id>jacoco-aggregate</id>
            <phase>prepare-package</phase>
            <inherited>false</inherited>
            <goals>
              <goal>report-aggregate</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <reportFormat>plain</reportFormat>
          <forkCount>1C</forkCount>
          <includes>
            <include>**services/*/services/*/**/*Test*.java</include>
            <include>**/*IT*.java</include>
          </includes>
          <!--suppress UnresolvedMavenProperty -->
          <argLine>${spring.runner.args} ${argLine}</argLine>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.asciidoctor</groupId>
        <artifactId>asciidoctor-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-docs</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>process-asciidoc</goal>
            </goals>
            <configuration>
              <backend>html5</backend>
              <doctype>book</doctype>
              <attributes>
                <root>UNC_2020_MS_TLT</root>
                <jdocs>UNC_2020_MS_TLT/apidocs</jdocs>
                <templates>${mpr.root}/docs/templates</templates>
                <snippets>${project.build.directory}/generated-snippets</snippets>
                <icons>font</icons>
                <source-highlighter>highlightjs</source-highlighter>
                <toc>left</toc>
                <toclevels>4</toclevels>
                <operation-curl-request-title>CURL request</operation-curl-request-title>
                <operation-http-request-title>Example request</operation-http-request-title>
                <operation-http-response-title>Example response</operation-http-response-title>
              </attributes>
              <outputDirectory>${mpr.root}/documentation/</outputDirectory>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.springframework.restdocs</groupId>
            <artifactId>spring-restdocs-asciidoctor</artifactId>
            <version>${spring-restdocs.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <inherited>false</inherited>
        <executions>
          <execution>
            <phase>prepare-package</phase>
            <id>generate-apidocs</id>
            <goals>
              <goal>aggregate</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <reportOutputDirectory>documentation/apidocs</reportOutputDirectory>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>sonar</id>
      <properties>
        <sonar.projectKey>kostua16_UNC_2020_MS_TLT</sonar.projectKey>
        <sonar.moduleKey>${project.groupId}:${project.artifactId}</sonar.moduleKey>
        <sonar.organization>kostua16</sonar.organization>
        <sonar.host.url>https://sonarcloud.io</sonar.host.url>
        <sonar.sources>src/main/java/</sonar.sources>
        <sonar.language>java</sonar.language>
        <sonar.java.binaries>target/classes</sonar.java.binaries>
        <sonar.java.checkstyle.reportPaths>target/checkstyle-result.xml</sonar.java.checkstyle.reportPaths>
      </properties>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.sonarsource.scanner.maven</groupId>
            <artifactId>sonar-maven-plugin</artifactId>
            <version>${sonar.version}</version>
            <executions>
              <execution>
                <phase>test</phase>
                <goals>
                  <goal>sonar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
